[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=64", "setuptools_scm>=8"]

[project]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering"
]
dependencies = [
  "attrs",
  "black",
  "cacholote",
  "cads-adaptors@git+https://github.com/ecmwf-projects/cads-adaptors.git",
  "cads-broker@git+https://github.com/ecmwf-projects/cads-broker.git",
  "cads-catalogue@git+https://github.com/ecmwf-projects/cads-catalogue.git",
  "cads-common@git+https://github.com/ecmwf-projects/cads-common.git",
  "fastapi",
  "limits",
  "ogc-api-processes-fastapi@git+https://github.com/ecmwf-projects/ogc-api-processes-fastapi.git",
  "pydantic>2",
  "pydantic-settings>2",
  "prometheus_client",
  "requests",
  "sqlalchemy>=2.0.9",
  "starlette_exporter",
  "structlog"
]
description = "CADS Processing API service"
dynamic = ["version"]
license = {file = "LICENSE"}
name = "cads-processing-api-service"
readme = "README.md"

[tool.coverage.run]
branch = true

[tool.mypy]
plugins = ["sqlalchemy.ext.mypy.plugin"]
strict = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "cads_adaptors.*",
  "cads_common.*",
  "yaml"
]

[tool.ruff]
# Same as Black.
indent-width = 4
line-length = 88

[tool.ruff.lint]
ignore = [
  # pydocstyle: Missing Docstrings
  "D1"
]
select = [
  # pyflakes
  "F",
  # pycodestyle
  "E",
  "W",
  # isort
  "I",
  # pydocstyle
  "D"
]

[tool.ruff.lint.pycodestyle]
max-line-length = 110

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.setuptools]
packages = ["cads_processing_api_service"]

[tool.setuptools_scm]
fallback_version = "999"
write_to = "cads_processing_api_service/version.py"
write_to_template = '''
# Do not change! Do not track in version control!
__version__ = "{version}"
'''
